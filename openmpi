open MPI process 

download openmpi form http://www.open-mpi.org

then run following commands
1:
   sudo apt-get update
   sudo apt install gcc
2:
   tar -jxf openmpi-4.1.4.tar.bz2
3:
   cd openmpi-4.1.4
4:
   ./configure --prefix=$HOME/opt/openmpi
   make all
   make install
5:
   echo "export PATH=\$PATH:\$HOME/opt/openmpi/bin" >> $HOME/.bashrc
   echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\$HOME/opt/openmpi/lib" >> $HOME/.bashrc
   
   //code for sum of array save code with the name of sum_mpi.c put code in /opt/openmpi/bin
   
#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>

#define ARRAY_SIZE 1000

int main(int argc, char** argv) {
    int rank, size, i;
    int send_array[ARRAY_SIZE];
    int recv_array[ARRAY_SIZE / 4]; // Each process will receive 1/4th of the array
    int local_sum = 0, global_sum = 0;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (rank == 0) {
        // Initialize the send array with values
        for (i = 0; i < ARRAY_SIZE; i++) {
            send_array[i] = i + 1;
        }
    }

    // Scatter the send array among processes
    MPI_Scatter(send_array, ARRAY_SIZE / size, MPI_INT, recv_array, ARRAY_SIZE / size, MPI_INT, 0, MPI_COMM_WORLD);

    // Calculate the local sum
    for (i = 0; i < ARRAY_SIZE / size; i++) {
        local_sum += recv_array[i];
    }

    // Reduce the local sums to obtain the global sum
    MPI_Reduce(&local_sum, &global_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    if (rank == 0) {
        printf("The sum of array elements is: %d\n", global_sum);
    }

    MPI_Finalize();
    return 0;
}


6: compile code using 
   mpicc -o sum_mpi sum_mpi.c
7: Run code
   mpiexec -n p ./sum_mpi
//in place of p put some value like 4 or something like that



